/
setwd("C:/R_Coursera/assignment4/Baltimore_homicides")
homicides <- readLines("homicides.txt")
isnull
is.null
x <- nukk
x <- null
x <- NULL
x
if (is.null(x)) x=3
x
x <- NULL
if (is.null(x)) x=3
x
x <-4
if (is.null(x)) x=3
x
source("count.r")
x<-count()
x<-count("stabbing")
x
x<-count("stabbinag")
?regexp
x<-c("this is a test boyo!")
grep(x,"!")
p<-grep(x,"!")
p
?grep
p<-grep("!", x)
p
p<-grep("!", x[1])
p
homicides[1]
homicides[1000]
p<-grep("stabbing", homicides)
p
homicides[17]
p<-grep("stabb*", homicides)
p
p<-grep("iconHomicideStabbing", homicides)
p
length(grep("iconHomicideStabbing", homicides))
length(grep("iconHomicideStabbing", homicides))
length(grep("icon_Homicide_Stabbing", homicides))
length(grep("[Cc]ause: [Ss]tabbing", homicides))
length(grep("[Cc]ause: [Ss]tabbed", homicides))
length(grep("[Cc]ause: [Ss]tab[.]", homicides))
length(grep("[Cc]ause: [Ss]tab.", homicides))
length(grep("[Cc]ause: [Ss]tab. | iconHomicideStabbing", homicides))
length(grep("[Cc]ause: [Ss]tab[.] | iconHomicideStabbing", homicides))
length(grep("[Cc]ause: [Ss]tab[.]|iconHomicideStabbing", homicides))
length(grep("[Cc]ause: [Ss]tab[.]", homicides))
length(grep("[Cc]ause: [Ss]tab.", homicides))
length(grep("[Cc]ause: [Ss]tab.|iconHomicideStabbing", homicides))
length(grep("[Cc]ause: [Ss]tab.|icon.[Ss]tab.", homicides))
source("count.r")
source("count.r")
x<-count()
x
x<-count("stabbing")
x
length(grep("[Cc]ause: [Ss]tab.|icon.[Ss]tab.", homicides))
count("other")
source("count.r")
count("other")
num <- count("unknown")
num
num <- count("asphyxiation")
num
num <- count("blunt force")
num
submit()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
num <- count("shooting")
num
num <- count("shooting")
source("count.r")
num <- count("shooting")
num
submit()
submit()
submit()
x <- NULL
source("agecount.r")
agecount()
agecount(12)
agecount(12)
source("agecount.r")
agecount(12)
source("agecount.r")
agecount(12)
source("agecount.r")
agecount(12)
source("agecount.r")
agecount(12)
source("agecount.r")
agecount(12)
source("agecount.r")
agecount
agecount()
agecount()
agecount(2)
source("agecount.r")
agecount(2)
agecount(62)
source("agecount.r")
source("agecount.r")
agecount(62)
agecount(2)
source("agecount.r")
agecount(2)
agecount(62)
agecount(21)
source("agecount.r")
agecount(21)
source("agecount.r")
agecount(21)
source("agecount.r")
agecount(21)
source("agecount.r")
agecount(21)
agecount(4)
agecount(3)
agecount(21)
source("agecount.r")
source("agecount.r")
agecount(21)
agecount(3)
source("agecount.r")
agecount(3)
agecount(21)
submit()
submit()
c<-"going up and up and up"
x<- grep(^([a-z]+) +\1 +[a-z]+ [0-9] , c)
x<- grep("^([a-z]+) +\1 +[a-z]+ [0-9]" , c)
x
c<-"night night at 8"
x<- grep("^([a-z]+) +\1 +[a-z]+ [0-9]" , c)
x
c<-"bye bye from up high"
x<- grep("^([a-z]+) +\1 +[a-z]+ [0-9]" , c)
x
c<-"heading, heading by 9"
x
x<- grep("^([a-z]+) +\1 +[a-z]+ [0-9]" , c)
x
x<- grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
x
c<-"bye bye from up high"
x<- grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
x
grep()
grep(,c)
grep(c)
grep(c,)
x<-grep()
?grep
x<-grep(c)
grep(c)
grep(c,x)
?colorRamp
?rgb
topo.colors
?topo.colors
?colors
?rgb(255,123,255)
rgb(255,123,255)
colors(255,123,255)
colorRamp(255,123,255)
topo.colors(255,123,255)
colorRamp("255","123","255")
rgb(1,.5,.7)
rgb(1)
rgb(1,.5,.2)
rgb(1,.5,.255)
rgb(1,.235,.255)
c<-"bye bye from up high"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c="bye bye from up high"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c<-"night night at 8"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c="night night at 8"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c="heading, heading by 9"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c<-"heading, heading by 9"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c<-"bye bye from up high""
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
c<-"bye bye from up high"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]",c)
?getMethod
?getS3Method
??getS3Method
??getS4Method
?showmethods
??showmethods
?show
?show-methods
grep("test ",x)
setwd("C:/R_Coursera/PracticalMachineLearning/projectSubmission")
set.seed(1433);
# needed for download file function
setInternet2(use = TRUE)
library(ggplot2);
library(lattice);
library(caret);
library(utils);
classeVariable = 53;
csvfilename = "./pml-training.csv"
rawtrainingdata <- read.table(csvfilename, sep=",", header = TRUE)
vNames <- names(rawtrainingdata)
hasNA <- sapply(rawtrainingdata[vNames], function(x) sum(is.na(x)))
Over30pc <- names(which(hasNA >= 0.3*nrow(rawtrainingdata)))
stripout <- Over30pc;
removevariables <- stripout;
uniqueids <- which(sapply(rawtrainingdata, function(x) length(unique(x))) == nrow(rawtrainingdata))
removevariables <- union(removevariables, names(uniqueids))
scrubbedvars <- setdiff(vNames, removevariables)
trainingdata<- rawtrainingdata[,scrubbedvars]
nsc <- nearZeroVar(trainingdata, saveMetrics=FALSE)
trainingdata2 <-  trainingdata[,-nsc]
trainingdata <- trainingdata2
# remove raw_timestamp_part_1
trainingdata <-(trainingdata [,-2])
#remove  raw_timestamp_part_2 and  cvtd_timestamp
trainingdata <-(trainingdata [,-3])
trainingdata <-(trainingdata [,-2])
trainingdata <-(trainingdata [,-1])
trainingdata <-(trainingdata [,-1])
M<- abs(cor(trainingdata[,-classe]))
diag(M) <- 0
p<-which (M > .95 , arr.ind=T)
p
M<- abs(cor(trainingdata[,-classe]))
diag(M) <- 0
p<-which (M > .95 , arr.ind=T)
p
M<- abs(cor(trainingdata[,-classeVariable]))
diag(M) <- 0
p<-which (M > .95 , arr.ind=T)
p
subsetTraining<-paste(trainingdata$total_accel_belt,
trainingdata$accel_belt_z    ,
trainingdata$accel_belt_x    ,
trainingdata$roll_belt       ,
trainingdata$accel_belt_z    ,
trainingdata$pitch_belt      ,
trainingdata$roll_belt       ,
trainingdata$total_accel_belt,
trainingdata$gyros_dumbbell_z,
trainingdata$gyros_dumbbell_x
subsetTraining<-paste(trainingdata$total_accel_belt,
trainingdata$accel_belt_z    ,
trainingdata$accel_belt_x    ,
trainingdata$roll_belt       ,
trainingdata$accel_belt_z    ,
trainingdata$pitch_belt      ,
trainingdata$roll_belt       ,
trainingdata$total_accel_belt,
trainingdata$gyros_dumbbell_z,
trainingdata$gyros_dumbbell_x
)
subsetTraining<-paste(trainingdata$total_accel_belt,
trainingdata$accel_belt_z    ,
trainingdata$accel_belt_x    ,
trainingdata$roll_belt       ,
trainingdata$accel_belt_z    ,
trainingdata$pitch_belt      ,
trainingdata$roll_belt       ,
trainingdata$total_accel_belt,
trainingdata$gyros_dumbbell_z,
trainingdata$gyros_dumbbell_x
)
subsetTraining
fitControl <- trainControl( method = "repeatedcv",  number = 10,   repeats = 10)
mod_lda <- train (classe ~gyros_dumbbell_x , data=trainingdata, method = "lda" , trControl=fitControl)
mod_lda.p <- predict(mod_lda, trainingdata)
table(mod_lda.p , newdata= trainingdata[,classe])
mod_lda.p <- predict(mod_lda, trainingdata)
table(mod_lda.p , newdata= trainingdata[,classeVariable])
mod_lda <- train (classe ~roll_belt   , data=trainingdata, method = "lda" , trControl=fitControl)
mod_lda.p <- predict(mod_lda, trainingdata)
table(mod_lda.p , newdata= trainingdata[,classeVariable])
p
M<- abs(cor(trainingdata[,-classeVariable]))
diag(M) <- 0
p<-which (M > .99 , arr.ind=T)
p
fitControl <- trainControl( method = "repeatedcv",  number = 10,   repeats = 10)
mod_lda <- train (classe ~pitch_belt   , data=trainingdata, method = "lda" , trControl=fitControl)
mod_lda.p <- predict(mod_lda, trainingdata)
table(mod_lda.p , newdata= trainingdata[,classeVariable])
download.file (fileUrl, destfile="./data/pml-testing.csv")
download.file (testfileUrl, destfile="./data/pml-testing.csv")
testfileUrl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file (testfileUrl, destfile="./data/pml-testing.csv")
csvtest <- "./data/pml-testing.csv"
testingdata <- read.table(csvtest, sep=",", header = TRUE)
table(mod_lda.p , newdata= csvtest[,classeVariable])
csvtest[,classeVariable]
csvtest
table(mod_lda.p , newdata= testingdata[,classeVariable])
testingdata[,classeVariable]
testingdata
head(testingdata)
table(mod_lda.p , newdata= testingdata[,problem_id])
head(testingdata$classe)
head(testingdata$problem_id)
table(mod_lda.p , newdata= testingdata[,problem_id=classe])
head(testingdata$problem_id)
table(mod_lda.p , newdata= testingdata[,53])
table(mod_lda.p , newdata= testingdata[,52])
length(testingdata)
dim(testingdata)
table(mod_lda.p , newdata= testingdata[,160])
testingdata[,160])
testingdata[,160]
testingdata[,161]
testingdata[,159]
dim(testingdata)
head(testingdata$problem_id)
table(mod_lda.p , newdata= testingdata$problem_id)
testingdata$problem_id
summary(testingdata)
trainingdata$problem_id
trainingdata$problem_idq
table (trainingdata$pitch_belt , testingdata$pitch_belt )
table(head(mod_lda.p, 20) , newdata= testingdata$problem_id)
table(head(mod_lda.p, length(testingdata) , newdata= testingdata$problem_id)
table(head(mod_lda.p, length(testingdata) ), newdata= testingdata$problem_id)
table(head(mod_lda.p, length(testingdata) ), newdata= testingdata$problem_id)
length(testingdata)
table(head(mod_lda.p, 20 ), newdata= testingdata$problem_id)
